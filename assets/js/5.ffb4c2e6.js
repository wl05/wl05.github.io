(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{493:function(t,s,a){t.exports=a.p+"assets/img/js-engine-pipeline.55263e94.svg"},494:function(t,s,a){t.exports=a.p+"assets/img/interpreter-optimizing-compiler-v8.8a9c2480.svg"},495:function(t,s,a){t.exports=a.p+"assets/img/interpreter-optimizing-compiler-spidermonkey.2670bf83.svg"},496:function(t,s,a){t.exports=a.p+"assets/img/interpreter-optimizing-compiler-chakra.1c300565.svg"},497:function(t,s,a){t.exports=a.p+"assets/img/interpreter-optimizing-compiler-jsc.7dd33b33.svg"},498:function(t,s,a){t.exports=a.p+"assets/img/tradeoff-startup-speed.d362be76.svg"},499:function(t,s,a){t.exports=a.p+"assets/img/pipeline-detail-v8.f739680d.svg"},500:function(t,s,a){t.exports=a.p+"assets/img/pipeline-detail-spidermonkey.430d60f6.svg"},501:function(t,s,a){t.exports=a.p+"assets/img/pipeline-detail-chakra.e3df2f03.svg"},502:function(t,s,a){t.exports=a.p+"assets/img/pipeline-detail-javascriptcore.f74fe023.svg"},503:function(t,s,a){t.exports=a.p+"assets/img/v8-pipeline.59c9fa81.png"},553:function(t,s,a){"use strict";a.r(s);var e=a(14),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"js引擎工作原理详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js引擎工作原理详解"}},[t._v("#")]),t._v(" JS引擎工作原理详解")]),t._v(" "),e("page-tags",{attrs:{text:"发布于：2021-07-24"}}),t._v(" "),e("p",[t._v("作为前端开发了解"),e("code",[t._v("javascript")]),t._v("引擎的原理和工作流程是很有必要的。")]),t._v(" "),e("h2",{attrs:{id:"javascript引擎的工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript引擎的工作原理"}},[t._v("#")]),t._v(" Javascript引擎的工作原理")]),t._v(" "),e("p",[e("img",{attrs:{src:a(493),alt:"js-engine-pipeline.svg"}})]),t._v(" "),e("p",[e("code",[t._v("Javascript")]),t._v("引擎的工作原理基本都大同小异，整体流程上分为以下步骤：")]),t._v(" "),e("ol",[e("li",[t._v("将"),e("code",[t._v("Javascript")]),t._v("代码解析为"),e("code",[t._v("ATS")]),t._v("（抽象语法树）。")]),t._v(" "),e("li",[t._v("基于"),e("code",[t._v("AST")]),t._v("，\b解释器（"),e("code",[t._v("interpreter")]),t._v(" ）将"),e("code",[t._v("AST")]),t._v("转化为字节码（"),e("code",[t._v("bytecode")]),t._v("），这一步js引擎实际上已经在执行js代码了。")]),t._v(" "),e("li",[t._v("为了进一步的优化，优化编译器（"),e("code",[t._v("optimizing compiler")]),t._v("）将热点函数优化编译为机器指令（"),e("code",[t._v("machine code")]),t._v("）执行。")]),t._v(" "),e("li",[t._v("如果"),e("strong",[t._v("优化假设")]),t._v("失败，优化编译器会将机器码回退到字节码。")])]),t._v(" "),e("p",[t._v("如果对上述流程有疑问，别着急，接下来会有详细解释。")]),t._v(" "),e("h3",{attrs:{id:"各大主流浏览器js引擎对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#各大主流浏览器js引擎对比"}},[t._v("#")]),t._v(" 各大主流浏览器"),e("code",[t._v("js")]),t._v("引擎对比")]),t._v(" "),e("p",[t._v("在了解V8的具体工作流程之前，我们先来看看各大浏览器的js引擎具体的工作流程是怎样的。")]),t._v(" "),e("p",[t._v("上面也提到，"),e("code",[t._v("js")]),t._v("引擎工作的流程大致是一致的：")]),t._v(" "),e("ul",[e("li",[t._v("解释器负责快速的生成没有优化过的字节码，")]),t._v(" "),e("li",[t._v("优化编译器负责生成优化过后的机器码但是相对来说花的时间会长一些。")])]),t._v(" "),e("p",[t._v("但是不同"),e("code",[t._v("js")]),t._v("引擎的优化过程和策略会有一些区别。")]),t._v(" "),e("h4",{attrs:{id:"v8引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎"}},[t._v("#")]),t._v(" "),e("code",[t._v("V8")]),t._v("引擎")]),t._v(" "),e("p",[e("img",{attrs:{src:a(494),alt:"interpreter-optimizing-compiler-v8.svg"}})]),t._v(" "),e("p",[e("code",[t._v("V8")]),t._v(" 引擎用于"),e("code",[t._v("Chrome")]),t._v("和"),e("code",[t._v("NodeJs")]),t._v("中。"),e("code",[t._v("V8")]),t._v("的解释器叫做"),e("code",[t._v("Ignition")]),t._v("，负责产生和执行字节码。")]),t._v(" "),e("p",[e("code",[t._v("Ignition")]),t._v("在执行字节码的过程中会收集分析数据用于后续的优化。例如当一个函数经常被调用执行，这个函数就会变成热点函数，这个时候字节码和分析数据就被传递给优化编译器做进一步的优化的处理。")]),t._v(" "),e("p",[e("code",[t._v("V8")]),t._v("的优化编译器叫做"),e("code",[t._v("TurboFan")]),t._v("，根据分析数据产生高度优化的机器指令。")]),t._v(" "),e("h4",{attrs:{id:"spidermonkey引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spidermonkey引擎"}},[t._v("#")]),t._v(" "),e("code",[t._v("SpiderMonkey")]),t._v("引擎")]),t._v(" "),e("p",[e("img",{attrs:{src:a(495),alt:"interpreter-optimizing-compiler-spidermonkey.svg"}})]),t._v(" "),e("p",[e("code",[t._v("SpiderMonkey")]),t._v("是"),e("code",[t._v("Mozilla")]),t._v("的"),e("code",[t._v("js")]),t._v("引擎，用于"),e("code",[t._v("Firefox")]),t._v(" 和 "),e("a",{attrs:{href:"https://github.com/mozilla/spidernode",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("SpiderNode")]),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("SpiderMonkey")]),t._v("有两个优化编译器。解释器将字节码交给"),e("code",[t._v("Baseline")]),t._v("编译器，"),e("code",[t._v("Baseline")]),t._v("编译器会优化部分代码并执行，执行过程中会产生分析数据。结合分析数据"),e("code",[t._v("IonMonkey")]),t._v("编译器会生成高度优化的代码。如果优化失败，"),e("code",[t._v("IonMonkey")]),t._v("会将代码回滚到"),e("code",[t._v("Baseline")]),t._v("产生的代码。")]),t._v(" "),e("h4",{attrs:{id:"chakra引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chakra引擎"}},[t._v("#")]),t._v(" "),e("code",[t._v("Chakra")]),t._v("引擎")]),t._v(" "),e("p",[e("img",{attrs:{src:a(496),alt:"interpreter-optimizing-compiler-chakra.svg"}})]),t._v(" "),e("p",[e("code",[t._v("Chakra")]),t._v(" 是微软的"),e("code",[t._v("js")]),t._v("引擎，用于"),e("code",[t._v("Edge")]),t._v("和"),e("a",{attrs:{href:"https://github.com/nodejs/node-chakracore",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Node-ChakraCore")]),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("Chakra")]),t._v(" 同样也有两个优化编译器。解释器将字节码交给"),e("code",[t._v("SimpleJIT")]),t._v("编译器，"),e("code",[t._v("SimpleJIT")]),t._v("做部分优化。结合分析数据"),e("code",[t._v("FullJIT")]),t._v("编译器会生成高度优化的代码。如果优化失败，"),e("code",[t._v("FullJIT")]),t._v("将代码回滚到字节码。")]),t._v(" "),e("h4",{attrs:{id:"javascriptcore引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascriptcore引擎"}},[t._v("#")]),t._v(" "),e("code",[t._v("JavaScriptCore")]),t._v("引擎")]),t._v(" "),e("p",[e("img",{attrs:{src:a(497),alt:"interpreter-optimizing-compiler-jsc.svg"}})]),t._v(" "),e("p",[e("code",[t._v("JavaScriptCore")]),t._v("（缩写"),e("code",[t._v("JSC")]),t._v("），是苹果的"),e("code",[t._v("js")]),t._v("引擎用于"),e("code",[t._v("Safari")]),t._v("和"),e("code",[t._v("React Native")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("JSC")]),t._v("引入了三个优化编译器。"),e("code",[t._v("LLInt")]),t._v("解释器 （"),e("code",[t._v("the Low-Level Interpreter")]),t._v("） 将代码交给"),e("code",[t._v("Baseline")]),t._v("编译器，"),e("code",[t._v("Baseline")]),t._v("优化过后将代码交给"),e("code",[t._v("DFG")]),t._v(" ("),e("code",[t._v("Data Flow Graph")]),t._v(")编译器，最后"),e("code",[t._v("DFG")]),t._v("将代码交给"),e("code",[t._v("FTL")]),t._v(" ("),e("code",[t._v("Faster Than Light")]),t._v(") 编译器。")]),t._v(" "),e("p",[t._v("通过对比其实不难发现，"),e("code",[t._v("js")]),t._v("引擎的整体架构基本都是相同的，都是 "),e("code",[t._v("parser -> interpreter -> compiler")]),t._v("。 那为什么有些只有一个优化编译器而有些又有多个呢？其实是为了做一些权衡。")]),t._v(" "),e("p",[e("strong",[t._v("解释器（"),e("code",[t._v("interpreter")]),t._v("）能够快速的生成可执行的代码，但是代码的执行效率不高。编译器呢需要多花些时间来做编译优化，但是最后生成的是可以高效执行的机器码。")]),t._v(" 所以这里就需要权衡到底是要"),e("code",[t._v("快速生成并执行")]),t._v("还是要 "),e("code",[t._v("多花些时间生成并高效执行")]),t._v("，一些引擎引入多个具有不同时间/效率特性的优化编译器，以增加复杂性为代价，就是为了对这些权衡做更细粒度的控制。这中间还涉及到内存的权衡，机器码比字节码会占用更多的内存，接下来会详细讲解。")]),t._v(" "),e("h3",{attrs:{id:"js引擎的优化权衡"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js引擎的优化权衡"}},[t._v("#")]),t._v(" "),e("code",[t._v("js")]),t._v("引擎的优化权衡")]),t._v(" "),e("p",[e("img",{attrs:{src:a(498),alt:"tradeoff-startup-speed.svg"}})]),t._v(" "),e("p",[e("code",[t._v("js")]),t._v("引擎在优化过程中做的权衡，核心点就是上面讲到的 "),e("strong",[t._v("解释器能够快速的生成可执行的代码，但是代码的执行效率不高。编译器呢需要多花些时间来做编译优化，但是最后生成的是可以高效执行的机器码")])]),t._v(" "),e("p",[t._v("通过下面这个例子来看看各大浏览器的处理过程：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4242424242")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tresult "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h4",{attrs:{id:"v8引擎-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎-2"}},[t._v("#")]),t._v(" v8引擎")]),t._v(" "),e("p",[e("code",[t._v("V8")]),t._v("在"),e("code",[t._v("Ignition")]),t._v("解释器中生成字节码并执行，在这个执行过程中"),e("code",[t._v("V8")]),t._v("会收集一些"),e("code",[t._v("多次执行函数")]),t._v("的分析数据，这些函数叫做"),e("code",[t._v("热点函数")]),t._v("，紧接着就会启动"),e("code",[t._v("TurboFan frontend")]),t._v("， "),e("code",[t._v("TurboFan frontend")]),t._v("是"),e("code",[t._v("TurboFan")]),t._v("编译器的一部分，专门负责集成分析数据和构建代码的基础机器表示。随后这部分结果被发送到另一个线程上的 "),e("code",[t._v("TurboFan")]),t._v(" 优化器（"),e("code",[t._v("TurboFan optimizer")]),t._v("）被进一步优化。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(499),alt:"pipeline-detail-v8.svg"}})]),t._v(" "),e("p",[t._v("当优化器在运行时，"),e("code",[t._v("V8")]),t._v("继续执行"),e("code",[t._v("Ignition")]),t._v("编译器中的字节码。当优化完成并生成了可执行的机器码，随后"),e("code",[t._v("V8")]),t._v("就以机器码来接替执行。")]),t._v(" "),e("blockquote",[e("p",[t._v("在2021年发布的"),e("code",[t._v("Chrome 91")]),t._v("中，V8在"),e("code",[t._v("Ignition")]),t._v(" 和 "),e("code",[t._v("TurboFan")]),t._v("中间增加了一个新的编译器"),e("code",[t._v("Sparkplug")])])]),t._v(" "),e("h4",{attrs:{id:"spidermonkey引擎-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spidermonkey引擎-2"}},[t._v("#")]),t._v(" "),e("code",[t._v("SpiderMonkey")]),t._v("引擎")]),t._v(" "),e("p",[e("code",[t._v("SpiderMonkey")]),t._v(" 也是在解释器中生成字节码然后执行，它还多了一个额外的"),e("code",[t._v("Baseline")]),t._v("层，热点函数首先被发送到"),e("code",[t._v("Baseline")]),t._v("编译器 （"),e("code",[t._v("Baseline compiler")]),t._v("），"),e("code",[t._v("Baseline")]),t._v("编译器在主线程中生成"),e("code",[t._v("Baseline code")]),t._v("，然后以"),e("code",[t._v("Baseline code")]),t._v("接替执行。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(500),alt:""}})]),t._v(" "),e("p",[e("code",[t._v("Baseline code")]),t._v(" 执行一定时间后，"),e("code",[t._v("SpiderMonkey")]),t._v("会启动"),e("code",[t._v("IonMonkey frontend")]),t._v("接着在另一个线程中启动"),e("code",[t._v("IonMonkey optimizer")]),t._v("。这个过程就和"),e("code",[t._v("V8")]),t._v("非常相似了，在优化过程中还是执行"),e("code",[t._v("Baseline code")]),t._v("，当优化完成后就以最后优化完成的代码接替执行。")]),t._v(" "),e("h4",{attrs:{id:"chakra-引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chakra-引擎"}},[t._v("#")]),t._v(" "),e("code",[t._v("Chakra")]),t._v(" 引擎")]),t._v(" "),e("p",[e("code",[t._v("Chakra")]),t._v(" 引擎的做法是将编译器完全独立到一个专用的进程中。"),e("code",[t._v("Chakra")]),t._v("将字节码和编译器可能需要的分析数据复制出来然后发送给编译器，这样做的好处是不会阻塞主线程的执行。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(501),alt:""}})]),t._v(" "),e("p",[t._v("当"),e("code",[t._v("SimpleJIT")]),t._v("编译器生成代码以后"),e("code",[t._v("Chakra")]),t._v("就开始执行"),e("code",[t._v("SimpleJIT")]),t._v("的代码。同理"),e("code",[t._v("FullJIT")]),t._v("的处理过程也是类似。这样的好处是复制的时间通常比运行整个编译器（"),e("code",[t._v("frontend")]),t._v("部分）的时间短。但其缺点在于这种启发式复制可能会遗漏某些优化所需的某些信息，因此它在一定程度上是用代码质量来换取时间。")]),t._v(" "),e("h4",{attrs:{id:"javascriptcore-引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascriptcore-引擎"}},[t._v("#")]),t._v(" "),e("code",[t._v("JavaScriptCore")]),t._v(" 引擎")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("JavaScriptCore")]),t._v("中编译器完全独立于主线程，主线程触发编译过程，编译器然后使用一套复杂的加锁机制从主线程获取分析数据。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(502),alt:"pipeline-detail-javascriptcore.svg"}})]),t._v(" "),e("p",[t._v("这种方式的优点是减少了主线程上因优化而产生的阻塞，缺点是需要处理一些多线程的问题还有因为各种操作而产生的加锁消耗。")]),t._v(" "),e("h4",{attrs:{id:"内存使用权衡"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内存使用权衡"}},[t._v("#")]),t._v(" 内存使用权衡")]),t._v(" "),e("p",[t._v("上面一直在讨论"),e("strong",[t._v("生成快跑得慢，生成慢跑得快的问题")]),t._v("，实际上还有一个需要权衡的因素，那就是内存的使用。前面也简单的提到过，机器码会比字节码占用更多的内存。下面通过一个例子来看看为什么。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("这里声明并执行了一个两数相加的函数。以"),e("code",[t._v("V8")]),t._v("为例，通过"),e("code",[t._v("Ignition")]),t._v("生成的字节码如下：")]),t._v(" "),e("div",{staticClass:"language-code extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("StackCheck\nLdar a1\nAdd a0, [0]\nReturn\n")])])]),e("p",[t._v("读不懂没关系，重点是这里生成的字节码只有"),e("strong",[t._v("短短四行")])]),t._v(" "),e("p",[t._v("如果"),e("code",[t._v("add")]),t._v("函数被调用多次，"),e("code",[t._v("add")]),t._v("函数就会变成热点函数，"),e("code",[t._v("TurboFan")]),t._v(" 就会进一步生成高度优化的机器码，如下：")]),t._v(" "),e("div",{staticClass:"language-code extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("leaq rcx,[rip+0x0]\nmovq rcx,[rcx-0x37]\ntestb [rcx+0xf],0x1\njnz CompileLazyDeoptimizedCode\npush rbp\nmovq rbp,rsp\npush rsi\npush rdi\ncmpq rsp,[r13+0xe88]\njna StackOverflow\nmovq rax,[rbp+0x18]\ntest al,0x1\njnz Deoptimize\nmovq rbx,[rbp+0x10]\ntestb rbx,0x1\njnz Deoptimize\nmovq rdx,rbx\nshrq rdx, 32\nmovq rcx,rax\nshrq rcx, 32\naddl rdx,rcx\njo Deoptimize\nshlq rdx, 32\nmovq rax,rdx\nmovq rsp,rbp\npop rbp\nret 0x18\n")])])]),e("p",[t._v("跟上面的字节码比起来代码量剧增，字节码和优化过的机器码比起来通常要少得多。字节码需要解释器才能执行，而优化过的机器码可以由处理器直接执行。")]),t._v(" "),e("p",[t._v("这也解释了"),e("code",[t._v("js")]),t._v("引擎为什么不优化所有的代码。一个原因是上面讲到的优化需要花一定的时间，最主要的原因还是机器码会占用更多的内存。")]),t._v(" "),e("p",[e("strong",[t._v("小结：")])]),t._v(" "),e("p",[e("code",[t._v("js")]),t._v("引擎拥有不同的优化层是为了权衡"),e("strong",[t._v("生成快跑得慢，生成慢跑得快的问题")]),t._v("。使用多个优化层可以做出更细粒度的决策，但是会引入额外的复杂性和开销。另外还需要权衡优化级别和代码的内存占用。这也解释了为什么"),e("code",[t._v("JS")]),t._v("引擎只会尝试优化热点函数的原因。")]),t._v(" "),e("h2",{attrs:{id:"v8引擎工作流程详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎工作流程详解"}},[t._v("#")]),t._v(" V8引擎工作流程详解")]),t._v(" "),e("p",[t._v("再通过一张图来回顾一下"),e("code",[t._v("V8")]),t._v(" 引擎工作的基本流程：\n"),e("img",{attrs:{src:a(503),alt:""}}),t._v("\n接下来详细的分析一下这个过程")]),t._v(" "),e("h3",{attrs:{id:"词法分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#词法分析"}},[t._v("#")]),t._v(" 词法分析")]),t._v(" "),e("p",[t._v("解析过程实际上分为两步: "),e("strong",[t._v("扫描器（"),e("code",[t._v("scanner")]),t._v("）")]),t._v(" 做词法分析，"),e("strong",[t._v("语法分析器（"),e("code",[t._v("parser")]),t._v("）")]),t._v(" 做语法分析。")]),t._v(" "),e("p",[t._v("我们知道"),e("code",[t._v("JS")]),t._v("代码实际上只是一串字符串，机器是无法直接执行的，需要经过一系列的转换。词法分析就是把代码中的字符串分割出来，生成一系列的"),e("code",[t._v("token")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("token：")]),t._v(" 词义单位，是指语法上不能再分割的最小单位，可能是单个字符，也可能是一个字符串。")]),t._v(" "),e("p",[t._v("那具体的token长什么样呢，通过一个例子来说明：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bar "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("这段代码经过词法分析过程生成如下"),e("code",[t._v("token")]),t._v("列表：")]),t._v(" "),e("div",{staticClass:"language-JSON extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Keyword"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Identifier"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Punctuator"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Punctuator"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Punctuator"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Keyword"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"let"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Identifier"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Punctuator"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"="')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Numeric"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Punctuator"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('";"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Keyword"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"return"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Identifier"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Punctuator"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('";"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Punctuator"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"}"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("可以看到实际上就是把代码做了拆分，拆分成不同类型的表示。")]),t._v(" "),e("p",[t._v("可以通过"),e("a",{attrs:{href:"https://esprima.org/demo/parse.html#",target:"_blank",rel:"noopener noreferrer"}},[t._v("esprima"),e("OutboundLink")],1),t._v("做在线解析")]),t._v(" "),e("h3",{attrs:{id:"语法分析-parser"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法分析-parser"}},[t._v("#")]),t._v(" 语法分析 （"),e("code",[t._v("parser")]),t._v("）")]),t._v(" "),e("p",[t._v("词法分析完成后，紧接着就是进行语法分析。语法分析的输入就是词法分析的输出，输出是"),e("strong",[t._v("AST抽象语法树")]),t._v("， "),e("code",[t._v("AST")]),t._v("是表示"),e("code",[t._v("token")]),t._v("关系的一棵树，它是源代码语法结构的一种抽象表示，它以树状的形式表现语法结构，树上的每个节点都表示代码中的一种结构。当代码中有语法错误的时候，"),e("code",[t._v("V8")]),t._v("在语法分析阶段抛出异常。")]),t._v(" "),e("p",[t._v("还是上面那段代码，生成的AST如下：")]),t._v(" "),e("div",{staticClass:"language-JSON extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Program"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"body"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FunctionDeclaration"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Identifier"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"params"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"body"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BlockStatement"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"body"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VariableDeclaration"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"declarations"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VariableDeclarator"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Identifier"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"init"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Literal"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"raw"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"kind"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"let"')]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ReturnStatement"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"argument"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Identifier"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"generator"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"expression"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"async"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sourceType"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("后续会专门针对"),e("code",[t._v("AST")]),t._v("写一片文章详解。")]),t._v(" "),e("h3",{attrs:{id:"解释器-ignition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解释器-ignition"}},[t._v("#")]),t._v(" 解释器 （"),e("code",[t._v("Ignition")]),t._v("）")]),t._v(" "),e("p",[t._v("生成"),e("code",[t._v("AST")]),t._v("树后，就是根据"),e("code",[t._v("AST")]),t._v("来生成字节码，这一步由"),e("code",[t._v("V8")]),t._v("的"),e("code",[t._v("Ignition")]),t._v("编译器来完成。同时Ignition会执行字节码。在这个执行过程中，如果一个函数被调用多次，这个函数就会被标记为热点函数，并将该函数的字节码以及执行的相关信息发送给"),e("code",[t._v("TurboFan")]),t._v("进行优化处理。")]),t._v(" "),e("p",[t._v("这一步的特点是："),e("code",[t._v("V8")]),t._v("可快速生成字节码，但是字节码的执行效率不高。")]),t._v(" "),e("h3",{attrs:{id:"编译器-turbofan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译器-turbofan"}},[t._v("#")]),t._v(" 编译器（"),e("code",[t._v("TurboFan")]),t._v("）")]),t._v(" "),e("p",[e("code",[t._v("TurboFan")]),t._v("会根据执行信息做出进一步优化代码的假设，在假设的基础上将字节码编译为优化的机器代码。如果假设成立，那么当下一次调用该函数时，就会执行优化编译后的机器代码，以提高代码的执行性能。如果假设失败就会进行回退操作，就是上图中"),e("code",[t._v("Deoptimize")]),t._v(" 这一步，把机器码还原为字节码。")]),t._v(" "),e("p",[t._v("那什么是假设？ 什么要进行回退呢？还是通过一个例子来阐述：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("JavaScript")]),t._v("动态类型的语言，这里"),e("code",[t._v("a")]),t._v("和"),e("code",[t._v("b")]),t._v("可以是任意类型数据，当执行"),e("code",[t._v("sum")]),t._v("函数时，"),e("code",[t._v("Ignition")]),t._v("解释器会检查"),e("code",[t._v("a")]),t._v("和"),e("code",[t._v("b")]),t._v("的数据类型，并相应地执行加法或者连接字符串的操作。")]),t._v(" "),e("p",[t._v("如果 "),e("code",[t._v("sum")]),t._v("函数被调用多次，每次执行时都要检查参数的数据类型是很浪费时间的。此时"),e("code",[t._v("TurboFan")]),t._v("就出场了。它会分析函数的执行信息，如果以前每次调用"),e("code",[t._v("sum")]),t._v("函数时传递的参数类型都是数字，那么"),e("code",[t._v("TurboFan")]),t._v("就预设"),e("code",[t._v("sum")]),t._v("的参数类型是数字类型，然后将其编译为机器码。")]),t._v(" "),e("p",[t._v("但是如果某一次的调用传入的参数不再是数字时，表示"),e("code",[t._v("TurboFan")]),t._v("的假设是错误的，此时优化编译生成的机器代码就不能再使用了，于是就需要进行回退到字节码的操作。")]),t._v(" "),e("p",[t._v("相信看到这里大家已经对浏览器大概的执行流程有了一个宏观上的认识了。")]),t._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://mathiasbynens.be/notes/prototypes",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript engine fundamentals: optimizing prototypes"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://mathiasbynens.be/notes/prototypes#tradeoffs",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript engine fundamentals: optimizing prototypes"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://www.freecodecamp.org/news/javascript-under-the-hood-v8/",target:"_blank",rel:"noopener noreferrer"}},[t._v("How JavaScript Works: Under the Hood of the V8 Engine"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000022062181#:~:text=%E5%9C%A8V8%20%E4%B8%AD%E6%9C%89%E4%B8%A4,%E4%BB%A5%E5%8F%8A%E7%A1%AE%E5%AE%9A%E8%AF%8D%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%82",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 引擎（V8）是如何工作的"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf",target:"_blank",rel:"noopener noreferrer"}},[t._v("How JavaScript works: an overview of the engine, the runtime, and the call stack"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://www.youtube.com/watch?v=8aGhZQkoFbQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("What the heck is the event loop anyway? | Philip Roberts | JSConf EU"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5",target:"_blank",rel:"noopener noreferrer"}},[t._v("How JavaScript works: Event loop and the rise of Async programming + 5 ways to better coding with async/await"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tasks, microtasks, queues and schedules"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://blog.bitsrc.io/javascript-engines-an-overview-2162bffa1187",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript Engines: An Overview"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://blog.sessionstack.com/how-javascript-works-the-rendering-engine-and-tips-to-optimize-its-performance-7b95553baeda",target:"_blank",rel:"noopener noreferrer"}},[t._v("How JavaScript works: the rendering engine and tips to optimize its performance"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://dev.to/edisonpappi/how-javascript-engines-chrome-v8-works-50if",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deep Dive in to JavaScript Engine - (Chrome V8)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/t__Jqzg1rbTlsCHXKMwh6A",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 引擎 V8 执行流程概述"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI4NjE3MzQzNg==&mid=2649865842&idx=1&sn=b595dbd13328ce65aa265eb21ba4ea85&chksm=f3e5efe1c49266f7f86bf899cd5f80d4864e21bbedc3f03170762c3f44f573d0c33eb44399de&mpshare=1&scene=24&srcid=&sharer_sharetime=1583838316032&sharer_shareid=3ebcb61ec5c32d188c9235d1a89dcfbf#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("视野前端（二）V8引擎是如何工作的"),e("OutboundLink")],1)])])])],1)}),[],!1,null,null,null);s.default=r.exports}}]);